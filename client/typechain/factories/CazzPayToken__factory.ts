/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CazzPayToken, CazzPayTokenInterface } from "../CazzPayToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmtToMint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amtToBurn",
        type: "uint256",
      },
    ],
    name: "burnTokensFromOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerToVerify",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mintTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amtToMint",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerToRemove",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200130d3803806200130d8339810160408190526200003491620002d5565b6040518060400160405280600c81526020016b21b0bd3d2830bcaa37b5b2b760a11b815250604051806040016040528060038152602001620435a560ec1b81525081600390805190602001906200008d9291906200022f565b508051620000a39060049060208401906200022f565b505050620000c1336005620000d560201b6200059f1790919060201c565b50620000ce3382620000f5565b5062000353565b6000620000ec836001600160a01b038416620001dd565b90505b92915050565b6001600160a01b038216620001505760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001649190620002ef565b90915550506001600160a01b0382166000908152602081905260408120805483929062000193908490620002ef565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008181526001830160205260408120546200022657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620000ef565b506000620000ef565b8280546200023d9062000316565b90600052602060002090601f016020900481019282620002615760008555620002ac565b82601f106200027c57805160ff1916838001178555620002ac565b82800160010185558215620002ac579182015b82811115620002ac5782518255916020019190600101906200028f565b50620002ba929150620002be565b5090565b5b80821115620002ba5760008155600101620002bf565b600060208284031215620002e857600080fd5b5051919050565b600082198211156200031157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200032b57607f821691505b602082108114156200034d57634e487b7160e01b600052602260045260246000fd5b50919050565b610faa80620003636000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637065cb4811610097578063a457c2d711610066578063a457c2d71461020c578063a9059cbb1461021f578063dd62ed3e14610232578063f0dda65c1461026b57600080fd5b80637065cb48146101b557806370883d84146101c857806370a08231146101db57806395d89b411461020457600080fd5b806323b872dd116100d357806323b872dd1461016d5780632f54bf6e14610180578063313ce5671461019357806339509351146101a257600080fd5b806306fdde0314610105578063095ea7b314610123578063173825d91461014657806318160ddd1461015b575b600080fd5b61010d61027e565b60405161011a9190610da3565b60405180910390f35b610136610131366004610e14565b610310565b604051901515815260200161011a565b610159610154366004610e3e565b61032a565b005b6002545b60405190815260200161011a565b61013661017b366004610e59565b61037e565b61013661018e366004610e3e565b6103a2565b6040516012815260200161011a565b6101366101b0366004610e14565b6103af565b6101596101c3366004610e3e565b6103ee565b6101596101d6366004610e14565b61043a565b61015f6101e9366004610e3e565b6001600160a01b031660009081526020819052604090205490565b61010d61048b565b61013661021a366004610e14565b61049a565b61013661022d366004610e14565b610544565b61015f610240366004610e95565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610159610279366004610e14565b610552565b60606003805461028d90610ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546102b990610ec8565b80156103065780601f106102db57610100808354040283529160200191610306565b820191906000526020600020905b8154815290600101906020018083116102e957829003601f168201915b5050505050905090565b60003361031e8185856105bb565b60019150505b92915050565b610335600533610714565b6103725760405162461bcd60e51b81526020600482015260096024820152682727aa1027aba722a960b91b60448201526064015b60405180910390fd5b61037b81610736565b50565b60003361038c858285610741565b6103978585856107d3565b506001949350505050565b6000610324600583610714565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061031e90829086906103e9908790610f19565b6105bb565b6103f9600533610714565b6104315760405162461bcd60e51b81526020600482015260096024820152682727aa1027aba722a960b91b6044820152606401610369565b61037b816109ea565b610445600533610714565b61047d5760405162461bcd60e51b81526020600482015260096024820152682727aa1027aba722a960b91b6044820152606401610369565b61048782826109f5565b5050565b60606004805461028d90610ec8565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105375760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610369565b61039782868684036105bb565b60003361031e8185856107d3565b61055d600533610714565b6105955760405162461bcd60e51b81526020600482015260096024820152682727aa1027aba722a960b91b6044820152606401610369565b6104878282610b72565b60006105b4836001600160a01b038416610c51565b9392505050565b6001600160a01b0383166106365760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610369565b6001600160a01b0382166106b25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610369565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038116600090815260018301602052604081205415156105b4565b610487600582610ca0565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146107cd57818110156107c05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610369565b6107cd84848484036105bb565b50505050565b6001600160a01b03831661084f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610369565b6001600160a01b0382166108cb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610369565b6001600160a01b0383166000908152602081905260409020548181101561095a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610369565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610991908490610f19565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109dd91815260200190565b60405180910390a36107cd565b61048760058261059f565b6001600160a01b038216610a715760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610369565b6001600160a01b03821660009081526020819052604090205481811015610b005760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610369565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b2f908490610f31565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610707565b6001600160a01b038216610bc85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610369565b8060026000828254610bda9190610f19565b90915550506001600160a01b03821660009081526020819052604081208054839290610c07908490610f19565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000818152600183016020526040812054610c9857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610324565b506000610324565b60006105b4836001600160a01b03841660008181526001830160205260408120548015610d99576000610cd4600183610f31565b8554909150600090610ce890600190610f31565b9050818114610d4d576000866000018281548110610d0857610d08610f48565b9060005260206000200154905080876000018481548110610d2b57610d2b610f48565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d5e57610d5e610f5e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610324565b6000915050610324565b600060208083528351808285015260005b81811015610dd057858101830151858201604001528201610db4565b81811115610de2576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e0f57600080fd5b919050565b60008060408385031215610e2757600080fd5b610e3083610df8565b946020939093013593505050565b600060208284031215610e5057600080fd5b6105b482610df8565b600080600060608486031215610e6e57600080fd5b610e7784610df8565b9250610e8560208501610df8565b9150604084013590509250925092565b60008060408385031215610ea857600080fd5b610eb183610df8565b9150610ebf60208401610df8565b90509250929050565b600181811c90821680610edc57607f821691505b60208210811415610efd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f2c57610f2c610f03565b500190565b600082821015610f4357610f43610f03565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122007bcec7b50eebb74312862a1f302993fd19be50397113caa09600de7147b4c4d64736f6c634300080c0033";

export class CazzPayToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initialAmtToMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CazzPayToken> {
    return super.deploy(
      _initialAmtToMint,
      overrides || {}
    ) as Promise<CazzPayToken>;
  }
  getDeployTransaction(
    _initialAmtToMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_initialAmtToMint, overrides || {});
  }
  attach(address: string): CazzPayToken {
    return super.attach(address) as CazzPayToken;
  }
  connect(signer: Signer): CazzPayToken__factory {
    return super.connect(signer) as CazzPayToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CazzPayTokenInterface {
    return new utils.Interface(_abi) as CazzPayTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CazzPayToken {
    return new Contract(address, _abi, signerOrProvider) as CazzPayToken;
  }
}
