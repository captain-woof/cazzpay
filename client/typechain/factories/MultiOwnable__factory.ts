/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MultiOwnable, MultiOwnableInterface } from "../MultiOwnable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerToVerify",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerToRemove",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002933600061002f60201b6102a31790919060201c565b506100c1565b600061004d836001600160a01b0384166001600160e01b0361005616565b90505b92915050565b600061006b83836001600160e01b036100a916565b6100a157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610050565b506000610050565b60009081526001919091016020526040902054151590565b610429806100d06000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063173825d9146100465780632f54bf6e1461007b5780637065cb48146100c2575b600080fd5b6100796004803603602081101561005c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166100f5565b005b6100ae6004803603602081101561009157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661017d565b604080519115158252519081900360200190f35b610079600480360360208110156100d857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610195565b61010660003363ffffffff61021a16565b61017157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e4f54204f574e45520000000000000000000000000000000000000000000000604482015290519081900360640190fd5b61017a81610243565b50565b600061018f818363ffffffff61021a16565b92915050565b6101a660003363ffffffff61021a16565b61021157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e4f54204f574e45520000000000000000000000000000000000000000000000604482015290519081900360640190fd5b61017a81610258565b600061023c8373ffffffffffffffffffffffffffffffffffffffff8416610269565b9392505050565b61025460008263ffffffff61028116565b5050565b61025460008263ffffffff6102a316565b60009081526001919091016020526040902054151590565b600061023c8373ffffffffffffffffffffffffffffffffffffffff84166102c5565b600061023c8373ffffffffffffffffffffffffffffffffffffffff84166103a9565b6000818152600183016020526040812054801561039f5783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808301919081019060009087908390811061031657fe5b906000526020600020015490508087600001848154811061033357fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061036357fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061018f565b600091505061018f565b60006103b58383610269565b6103eb5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561018f565b50600061018f56fea26469706673582212204f03a0115e811659afe653f17d7701b7ef72053b14ba57d3f01a815128a3c0d164736f6c63430006060033";

export class MultiOwnable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiOwnable> {
    return super.deploy(overrides || {}) as Promise<MultiOwnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiOwnable {
    return super.attach(address) as MultiOwnable;
  }
  connect(signer: Signer): MultiOwnable__factory {
    return super.connect(signer) as MultiOwnable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiOwnableInterface {
    return new utils.Interface(_abi) as MultiOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiOwnable {
    return new Contract(address, _abi, signerOrProvider) as MultiOwnable;
  }
}
