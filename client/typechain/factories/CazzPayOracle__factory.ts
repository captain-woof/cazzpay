/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CazzPayOracle, CazzPayOracleInterface } from "../CazzPayOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_approvedPriceFeedSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedPriceFeedSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxBlockTimestampDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxDataTimestampDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContractAddr",
        type: "address",
      },
    ],
    name: "getPriceOfTokenInCzpWithTokenAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    name: "getPriceOfTokenInCzpWithTokenSymbol",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerToVerify",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receivedSigner",
        type: "address",
      },
    ],
    name: "isSignerAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_receivedTimestamp",
        type: "uint256",
      },
    ],
    name: "isTimestampValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerToRemove",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newApprovedPriceFeedSigner",
        type: "address",
      },
    ],
    name: "setApprovedPriceFeedSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610fd8380380610fd88339818101604052602081101561003357600080fd5b505161004b600033610071602090811b61080817901c565b50600280546001600160a01b0319166001600160a01b0392909216919091179055610103565b600061008f836001600160a01b0384166001600160e01b0361009816565b90505b92915050565b60006100ad83836001600160e01b036100eb16565b6100e357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610092565b506000610092565b60009081526001919091016020526040902054151590565b610ec6806101126000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635b4664571161008157806385d7a44f1161005b57806385d7a44f1461024b578063b10993571461027e578063f31a210a14610323576100c9565b80635b466457146101c85780637065cb48146101fb578063750582051461022e576100c9565b80632f54bf6e116100b25780632f54bf6e1461014a5780633dbea0fd1461017d5780635118af5a146101ae576100c9565b806311c89b10146100ce578063173825d914610115575b600080fd5b610101600480360360208110156100e457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661032b565b604051901515815260200160405180910390f35b6101486004803603602081101561012b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661034f565b005b6101016004803603602081101561016057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103bc565b6101856103d4565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6101b66103f0565b60405190815260200160405180910390f35b610148600480360360208110156101de57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103f5565b6101486004803603602081101561021157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661049d565b6101016004803603602081101561024457600080fd5b5035610507565b6101b66004803603602081101561026157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661056c565b6101b66004803603602081101561029457600080fd5b8101906020810181356401000000008111156102af57600080fd5b8201836020820111156102c157600080fd5b803590602001918460018302840111640100000000831117156102e357600080fd5b91908080601f01602080910402602001604051908101604052818152929190602084018383808284376000920191909152509295506106db945050505050565b6101b66106e9565b60025473ffffffffffffffffffffffffffffffffffffffff8281169116145b919050565b61036060003363ffffffff6106ee16565b6103b05760405162461bcd60e51b815260206004820152600960248201527f4e4f54204f574e45520000000000000000000000000000000000000000000000604482015260640160405180910390fd5b6103b981610717565b50565b60006103ce818363ffffffff6106ee16565b92915050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b600f90565b61040660003363ffffffff6106ee16565b6104565760405162461bcd60e51b815260206004820152600960248201527f4e4f54204f574e45520000000000000000000000000000000000000000000000604482015260640160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6104ae60003363ffffffff6106ee16565b6104fe5760405162461bcd60e51b815260206004820152600960248201527f4e4f54204f574e45520000000000000000000000000000000000000000000000604482015260640160405180910390fd5b6103b98161072c565b6000816105126103f0565b4201116105505760405162461bcd60e51b815260040180806020018281038252602a815260200180610e67602a913960400191505060405180910390fd5b814210806103ce57506105616106e9565b824203109050919050565b60006106ce6106c98373ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156105ba57600080fd5b505afa1580156105ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052602081101561061557600080fd5b810190808051604051939291908464010000000082111561063557600080fd5b90830190602082018581111561064a57600080fd5b825164010000000081118282018810171561066457600080fd5b825250602001908051906020019080838360005b83811015610690578082015183820152602001610678565b50505050905090810190601f1680156106bd5780820380516001836020036101000a031916815260200191505b5060405250505061073d565b61075c565b6402540be4000292915050565b60006106ce6106c98361073d565b60b490565b60006107108373ffffffffffffffffffffffffffffffffffffffff84166107cc565b9392505050565b61072860008263ffffffff6107e616565b5050565b61072860008263ffffffff61080816565b600081805161075057506000905061034a565b60208301519392505050565b60006060600160405190808252806020026020018201604052801561078b578160200160208202803683370190505b509050828160008151811061079c57fe5b6020026020010181815250506107b18161082a565b6000815181106107bd57fe5b60200260200101519392505050565b600081815260018301602052604081205415159392505050565b60006107108373ffffffffffffffffffffffffffffffffffffffff84166109f5565b60006107108373ffffffffffffffffffffffffffffffffffffffff8416610ad2565b6060367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f013560ff81166040908102602001908390519050818152816042830136036020830137602081016040526000818051906020012090506000816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c810191909152605c01604051602081830303815290604052805190602001209050606060405190506041815260418036036020830137602081016040526000610901838363ffffffff610b1b16565b905061090c8161032b565b61095c5760405162461bcd60e51b815260206004820152601560248201527f5369676e6572206e6f7420617574686f72697a65640000000000000000000000604482015260640160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9e36013561098981610507565b6109d95760405162461bcd60e51b815260206004820152601960248201527f446174612074696d657374616d7020697320696e76616c696400000000000000604482015260640160405180910390fd5b6109e78a8960ff1689610bf2565b9a9950505050505050505050565b60008181526001830160205280604081205490508015610ac85783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083019190810190600090879083908110610a4957fe5b9060005260206000200154905080876000018481548110610a6657fe5b90600052602060002001556000818152600188810160205284019060409020558654879080610a9157fe5b60019003818190600052602060002060009101819055915586815260018801602052604090206000905560019450505050506103ce565b60009150506103ce565b6000610ade83836107cc565b610b135782546001810184556000848152839190602090200155825460008381526001850160205260409020555060016103ce565b5060006103ce565b600080600080845160411415610b48576020850151925060408501519150606085015160001a9050610bdc565b845160401415610b90576040850151602086015193507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8116925060ff1c601b019050610bdc565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640160405180910390fd5b610be886828585610c96565b9695505050505050565b6060806000806000806042870136035995508951865260208a51026020870101604052600094505b88851015610c8857604085028101359150600093505b8951841015610c7d57816020850260208c0101511415610c655760206040860282010135602085026020880101526001830192505b8951831415610c72578894505b600184019350610c30565b600185019450610c1a565b509398975050505050505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610cf75760405162461bcd60e51b8152600401808060200182810382526022815260200180610e236022913960400191505060405180910390fd5b8360ff16601b1480610d0c57508360ff16601c145b610d475760405162461bcd60e51b8152600401808060200182810382526022815260200180610e456022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610da6573d6000803e3d6000fd5b50505060206040510351905073ffffffffffffffffffffffffffffffffffffffff8116610e195760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640160405180910390fd5b9594505050505056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565446174612077697468206675747572652074696d657374616d7073206973206e6f7420616c6c6f776564a2646970667358221220523c3e3e3211f8d60273cff2a1e31845ec66dce9419c9aac32c04bd02aedb16664736f6c63430006060033";

export class CazzPayOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _approvedPriceFeedSigner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CazzPayOracle> {
    return super.deploy(
      _approvedPriceFeedSigner,
      overrides || {}
    ) as Promise<CazzPayOracle>;
  }
  getDeployTransaction(
    _approvedPriceFeedSigner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _approvedPriceFeedSigner,
      overrides || {}
    );
  }
  attach(address: string): CazzPayOracle {
    return super.attach(address) as CazzPayOracle;
  }
  connect(signer: Signer): CazzPayOracle__factory {
    return super.connect(signer) as CazzPayOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CazzPayOracleInterface {
    return new utils.Interface(_abi) as CazzPayOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CazzPayOracle {
    return new Contract(address, _abi, signerOrProvider) as CazzPayOracle;
  }
}
